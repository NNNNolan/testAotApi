name: Docker Build and Push

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Check Out
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Get Version
        id: get_version
        shell: bash # 明确指定使用 bash
        run: |
            # 首先尝试获取提交信息中的版本号
            COMMIT_VERSION=$(git log -1 --pretty=%B | grep -oP '(?<=\[version:).*?(?=\])' || echo "")
    
            # 使用日期作为默认版本号
            DATE_VERSION=$(TZ='Asia/Shanghai' date +'%Y%m%d.%H%M')
    
            # 如果找到提交中的版本号就用它，否则用日期
            if [ -n "$COMMIT_VERSION" ]; then
              VERSION="$COMMIT_VERSION"
              echo "Found version tag: $VERSION"
            else
              VERSION="$DATE_VERSION"
              echo "No version tag found, using date: $VERSION"
            fi
    
            # 设置输出
            echo "version=$VERSION" >> $GITHUB_OUTPUT
      # 获取北京时间
      - name: Get Beijing time
        id: time
        run: |
          echo "time=$(TZ='Asia/Shanghai' date '+%Y-%m-%d %H:%M:%S')" >> $GITHUB_OUTPUT

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: nolanhzy/pro
          tags: |
            type=raw,value=latest
            type=raw,value=${{ steps.get_version.outputs.version }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          platforms: linux/amd64,linux/arm64
          cache-from: type=registry,ref=nolanhzy/testaotapi:buildcache
          cache-to: type=registry,ref=nolanhzy/testaotapi:buildcache,mode=max

      # 只在构建成功时发送 Telegram 通知
      - name: Send Telegram Message
        if: success()
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          format: markdown
          message: |
            🎉 *Docker Build Success*
            
            📦 *Image*: nolanhzy/testaotapi:${{ steps.get_version.outputs.version }}
            👤 *By*: Nolan
            🕒 *Time*: ${{ steps.time.outputs.time }}
            
            💬 *Commit*: 
            ```
            ${{ github.event.head_commit.message }}
            ```